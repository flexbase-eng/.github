name: NPM Publish
on:
  workflow_call:
    inputs:
      tag:
        required: false
        type: string
        default: latest
      build_artifact:
        required: false
        type: string
        default: dist
      package_manager:
        required: false
        type: string
        default: yarn
      package_visibility:
        required: false
        type: string
        default: public
    secrets:
      NODE_AUTH_TOKEN:
        required: true

env:
  NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

jobs:
  npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    steps:
        
    - name: Retrieve build artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.build_artifact }}

    - name: Setup node with cache
      uses: actions/setup-node@v3
      with:
        registry-url: 'https://registry.npmjs.org'
        always-auth: true
        node-version: latest
        cache: {{ inputs.package_manager }}

    - name: check if beta and update package.json
      if: inputs.tag == 'beta'
      run: echo "VERSION=${{jq -r .version package.json}} >> $GITHUB_ENV

    - name: set package.json for beta
      if: inputs.tag == 'beta'
      run: echo "`jq '.version="${{env.VERSION}}-beta.${{github.event.number}}"' package.json`" > package.json


    - name: Setup yarn
      if: inputs.package_manager == 'yarn'
      run: yarn install --frozen-lockfile

    - name: Publish with yarn command
      if: inputs.package_manager == 'yarn'
      run: yarn publish --access ${{ inputs.package_visibility }} --tag ${{ inputs.tag }}

    - name: Setup npm
      if: inputs.package_manager == 'npm'
      run: npm ci

    - name: Publish with npm command
      if: inputs.package_manager == 'npm'
      run: npm publish --access ${{ inputs.package_visibility }} --tag ${{ inputs.tag }}
