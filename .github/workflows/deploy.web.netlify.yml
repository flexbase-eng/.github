name: Netlify Deploy
on:
  workflow_call:
    inputs:
      build_artifact_download:
        required: false
        type: string
        default: dist
      build_artifact_download_path:
        required: false
        type: string
        default: dist
      is_prod:
        required: false
        type: boolean
        default: false
env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deployUrl: ${{ steps.netlify_deploy.outputs.netlify_output.deploy_url }}
      prodUrl: ${{ steps.netlify_deploy.outputs.netlify_output.url }}
    steps:
      - name: Is production deployment
        if: inputs.is_prod == true
        run: echo "NETLIFY_PROD=--prod" >> $GITHUB_ENV

      - name: Retrieve build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.build_artifact_download }}
          path: ${{ inputs.build_artifact_download_path }}

      - name: Deploy to Netlify
        id: netlify_deploy
        uses: flexbase-eng/actions/netlify-cli@main
        with:
          args: deploy --dir=${{ inputs.build_artifact_download_path }} ${{ env.NETLIFY_PROD }}
        timeout-minutes: 2

      - name: Comment on PRa
        uses: actions/github-script@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':cloud: Deployed to ${{ steps.netlify_deploy.outputs.netlify_output.deploy_url }}'
            })
