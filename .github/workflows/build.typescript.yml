name: Build
on:
  workflow_call:
    inputs:
      artifact_folder:
        required: false
        type: string
        default: 'dist'
      artifact_name:
        required: false
        type: string
        default: 'dist'
      package_manager:
        required: false
        type: string
        default: 'yarn'
      build_command:
        required: false
        type: string
        default: 'build'
      lint_command:
        required: false
        type: string
        default: 'lint'
      test_command:
        required: false
        type: string
        default: 'test'
      node_version:
        required: false
        type: string
        default: 'latest'
      packr_command:
        required: false
        type: string
        default: ''
      coverage_artifact_folder:
        required: false
        type: string
        default: 'coverage/lcov.info'
      coverage_artifact_name:
        required: false
        type: string
        default: 'code-coverage-report'

jobs:
  labeler:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: TimonVS/pr-labeler-action@v4
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Create environment variables for yarn commands
        if: inputs.package_manager == 'yarn'
        run: |
          echo "CLI_INSTALL=yarn install --frozen-lockfile" >> $GITHUB_ENV
          echo "CLI_BUILD=yarn ${{ inputs.build_command }}" >> $GITHUB_ENV
          echo "CLI_LINT=yarn ${{ inputs.lint_command }}" >> $GITHUB_ENV
          echo "CLI_TEST=yarn ${{ inputs.test_command }}" >> $GITHUB_ENV
          echo "CLI_PACR=yarn ${{ inputs.packr_command }}" >> $GITHUB_ENV

      - name: Create environment variables for npm commands
        if: inputs.package_manager == 'npm'
        run: |
          echo "CLI_INSTALL=npm ci" >> $GITHUB_ENV
          echo "CLI_BUILD=npm run ${{ inputs.build_command }}" >> $GITHUB_ENV
          echo "CLI_LINT=npm run ${{ inputs.lint_command }}" >> $GITHUB_ENV
          echo "CLI_TEST=npm run ${{ inputs.test_command }}" >> $GITHUB_ENV
          echo "CLI_PACR=npm run ${{ inputs.packr_command }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.package_manager }}

      - name: Configure github internal package repo access
        env:
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=$PACKAGE_TOKEN" > .npmrc
          echo "@flexbase-eng:registry=https://npm.pkg.github.com" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Install dependencies
        run: ${{ env.CLI_INSTALL }}

      - name: Compile
        run: ${{ env.CLI_BUILD }}

      - name: Run tests
        run: ${{ env.CLI_TEST }}

      - name: Lint
        run: ${{ env.CLI_LINT }}

      - name: Packr
        if: ${{ inputs.packr_command != '' }}
        run: ${{ env.CLI_PACKR }}

      - name: Upload Build Artifacts
        if: ${{ inputs.artifact_folder != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_folder }}
          retention-days: 1

      - name: Upload Coverage Artifacts
        if: ${{ inputs.coverage_artifact_folder != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.coverage_artifact_name }}
          path: ${{ inputs.coverage_artifact_folder }}
          retention-days: 1
