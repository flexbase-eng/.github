name: Test
on:
  workflow_call:
    inputs:
      package_manager:
        required: false
        type: string
        default: 'yarn'
      test_unit_command:
        required: false
        type: string
        default: 'test'
      test_e2e_command:
        required: false
        type: string
      test_component_command:
        required: false
        type: string
      coverage_artifact_folder:
        required: false
        type: string
        default: 'coverage/lcov.info'
      coverage_artifact_name:
        required: false
        type: string
        default: 'code-coverage-report'

env:
  CLI_TEST_UNIT: yarn ${{ inputs.test_unit_command }}
  CLI_TEST_E2E: yarn ${{ inputs.test_e2e_command }}
  CLI_TEST_COMPONENT: yarn ${{ inputs.test_component_command }}

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      # - name: Retrieve build cache
      #   id: cache
      #   uses: actions/cache/restore@v3
      #   with:
      #     path: ./*
      #     key: build-cache-${{ github.sha }}

      # - name: Check cache hit
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: exit 1

      - name: Create environment variables for npm commands
        if: inputs.package_manager == 'npm'
        run: |
          echo "CLI_TEST_UNIT=npm run ${{ inputs.test_unit_command }}" >> $GITHUB_ENV
          echo "CLI_TEST_E2E=npm run ${{ inputs.test_e2e_command }}" >> $GITHUB_ENV
          echo "CLI_TEST_COMPONENT=npm run ${{ inputs.test_component_command }}" >> $GITHUB_ENV

  unit:
    name: Unit tests
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve build cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ./*
          key: build-cache-${{ github.sha }}

      - name: Check cache hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Run tests
        run: ${{ env.CLI_TEST_UNIT }}

      - name: Upload coverage artifacts
        if: ${{ inputs.coverage_artifact_folder != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.coverage_artifact_name }}
          path: ${{ inputs.coverage_artifact_folder }}
          retention-days: 1

  component:
    if: ${{ inputs.test_component_command != '' }}
    name: Component tests
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve build cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ./*
          key: build-cache-${{ github.sha }}

      - name: Check cache hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: ${{ env.CLI_TEST_COMPONENT }}

  e2e:
    if: ${{ inputs.test_e2e_command != '' }}
    name: End to end tests
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve build cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ./*
          key: build-cache-${{ github.sha }}

      - name: Check cache hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: ${{ env.CLI_TEST_E2E }}

  # artifacts:
  #   needs: [unit, component, e2e]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Upload unit test coverage artifacts
  #       if: ${{ inputs.coverage_artifact_folder != ''}}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ inputs.coverage_artifact_name }}
  #         path: ${{ inputs.coverage_artifact_folder }}
  #         retention-days: 1

  # - name: Upload component test coverage artifacts
  #   if: ${{ inputs.test_component_command != ''}}
  #   uses: actions/upload-artifact@v3
  #   with:
  #     name: ${{ inputs.coverage_artifact_name }}
  #     path: ${{ inputs.coverage_artifact_folder }}
  #     retention-days: 1
