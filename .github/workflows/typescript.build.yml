name: Build
on:
  workflow_call:
    inputs:
      package_folder:
        required: false
        type: string
      use_packr:
        required: false
        type: boolean
        default: true
      major_version:
        required: false
        type: string
      minor_version:
        required: false
        type: string
      revision:
        required: false
        type: string
      package_manager:
        required: false
        type: string
        default: 'yarn'

env:
  PACKR_MAJOR_VERSION: 
  PACKR_MINOR_VERSION: 
  PACKR_REVISION: 

jobs:
  pr-labeler:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: TimonVS/pr-labeler-action@v3
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  packr-versions:
    name: Packr version modifier
    runs-on: ubuntu-latest
    steps:
    - name: Build major version env
      if: ${{ inputs.major_version != ''}}
      run: echo 'PACKR_MAJOR_VERSION=--major ${{ inputs.major_version }}' >> $GITHUB_ENV

    - name: Build minor version env
      if: ${{ inputs.minor_version != ''}}
      run: echo 'PACKR_MINOR_VERSION=--minor ${{ inputs.minor_version }}' >> $GITHUB_ENV

    - name: Build revision env
      if: ${{ inputs.revision != ''}}
      run: echo 'PACKR_REVISION=--revision ${{ inputs.revision }}' >> $GITHUB_ENV

  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting
    - uses: actions/setup-node@v3
      with:
        node-version: latest
        cache: ${{ inputs.package_manager }}

  yarn:
    if: inputs.package_manager == 'yarn'
    name: Build/Lint/Test/Packr
    needs: [packr-versions, setup]
    runs-on: ubuntu-latest
    steps:
    - name: Install yarn
      run: yarn install --frozen-lockfile

    - name: Build yarn
      run: yarn build

    - name: Lint yarn
      run: yarn lint

    - name: Test yarn
      run: yarn test   

    - name: Packr
      if: ${{ inputs.use_packr == true }}
      run: yarn packr ${{ env.PACKR_MAJOR_VERSION }} ${{ env.PACKR_MINOR_VERSION }} ${{ env.PACKR_REVISION }}

  npm:
    if: inputs.package_manager == 'npm'
    name: Build/Lint/Test/Packr
    needs: [packr-versions, setup]
    runs-on: ubuntu-latest
    steps:
    - name: Install npm
      run: npm install --ci

    - name: Build npm
      run: npm run build

    - name: Lint npm
      run: npm run lint

    - name: Test npm
      run: npm run test    

    - name: Packr
      if: ${{ inputs.use_packr == true }}
      run: npm run packr ${{ env.PACKR_MAJOR_VERSION }} ${{ env.PACKR_MINOR_VERSION }} ${{ env.PACKR_REVISION }}

  artifacts:
    name: Store artifacts   
    runs-on: ubuntu-latest
    needs: [yarn, npm]
    if: |
      always() &&
      (needs.yarn.result == 'success' || needs.yarn.result == 'skipped') &&
      (needs.npm.result == 'success' || needs.npm.result == 'skipped')
    steps:
    - name: Store build artifacts
      if: ${{ inputs.package_folder != ''}}
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ${{ inputs.package_folder }}
        retention-days: 1

    - name: Store coverage artifacts
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/lcov.info
        retention-days: 1