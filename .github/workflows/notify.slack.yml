# fun notes around commit messages
# https://github.com/slackapi/slack-github-action/issues/116
name: Slack Notification
on:
  workflow_call:
    inputs:
      release_title:
        required: false
        type: string
        default: ''
      is_success:
        required: false
        type: boolean
        default: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  RELEASE_TITLE: ${{ inputs.release_title || github.event.repository.name }}

permissions:
  contents: read

jobs:
  slack-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get commits
        if: ${{ inputs.is_success }}
        uses: octokit/request-action@v2.x
        id: get_commit_list
        with:
          route: GET /repos/{owner}/{repo}/commits?sha=${{ github.sha }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}

      - name: Prepare
        if: ${{ inputs.is_success }}
        id: slack-prepare
        run: |
          COMMIT_MESSAGE="${{ fromJSON(steps.get_commit_list.outputs.data)[0].commit.message }}"
          COMMIT_MESSAGE="$(echo ${COMMIT_MESSAGE:0:2800})"
          COMMIT_MESSAGE="$(echo "$COMMIT_MESSAGE" | sed -z 's/\r/\\r/g; s/\n/\\n/g; s/"//g; s/`//g; s/-/\-/g;')"
          echo "commit-message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

      - name: Post to a Success Message to Slack
        if: ${{ inputs.is_success }}
        id: slack-success
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rocket: ${{ env.RELEASE_TITLE }} has been shipped to production. :rocket:"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Author*: ${{ fromJSON(steps.get_commit_list.outputs.data)[0].commit.author.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Description*: ${{ steps.slack-prepare.outputs.commit-message }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit Details*: ${{ fromJSON(steps.get_commit_list.outputs.data)[0].html_url }}"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }
      - name: Post to a Failure Message to Slack
        if: ${{ !inputs.is_success }}
        id: slack-failure-message
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":alert: ${{ env.RELEASE_TITLE }} failed to deploy. :alert:"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Author*: ${{ github.actor }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Triggering Branch*: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Link*: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }