name: Unit tests
on:
  workflow_call:
    inputs:
      package_manager:
        required: false
        type: string
        default: 'yarn'
      test_command:
        required: false
        type: string
        default: 'test:ci'
      node_version:
        required: false
        type: string
      coverage_artifact_folder:
        required: false
        type: string
        default: 'coverage/lcov.info'
      coverage_artifact_name:
        required: false
        type: string
        default: 'code-coverage-report'
      use_go_migrate:
        required: false
        type: boolean
        default: false
      use_gcp_emulators:
        required: false
        type: boolean
        default: false
      build_cache_key:
        required: false
        type: string
        default: build-cache-${{ github.sha }}

env:
  CLI_TEST: yarn ${{ inputs.test_command }}

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: platform
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Create environment variables for npm commands
        if: inputs.package_manager == 'npm'
        run: echo "CLI_TEST=npm run ${{ inputs.test_command }}" >> $GITHUB_ENV

      - name: Retrieve build cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: ./*
          key: ${{ inputs.build_cache_key }}
          fail-on-cache-miss: true

      - name: Setup Node ${{ inputs.node_version }}
        if: ${{ inputs.node_version != ''}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.package_manager }}

      - name: Install go-migrate
        if: ${{ inputs.use_go_migrate == true }}
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate

      - name: 'Install Cloud SDK'
        if: ${{ inputs.use_gcp_emulators == true }}
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 439.0.0'
          install_components: 'beta,pubsub-emulator'

      - name: 'Start Pub/Sub emulator'
        if: ${{ inputs.use_gcp_emulators == true }}
        run: |
          gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 &

      - name: Run tests
        env:
          PUBSUB_EMULATOR_HOST: 'localhost:8085'
        run: ${{ env.CLI_TEST }}

      - name: Upload coverage artifacts
        if: ${{ inputs.coverage_artifact_folder != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.coverage_artifact_name }}
          path: ${{ inputs.coverage_artifact_folder }}
          retention-days: 1
